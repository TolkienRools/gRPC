syntax = "proto3";

package bike;

service BikeService {
  // Получить полную информацию о велосипеде
  rpc GetBikeDetails(BikeRequest) returns (BikeResponse);
  
  // Обновить состояние компонента
  rpc UpdateComponentStatus(ComponentStatusUpdate) returns (UpdateResponse);
}

message BikeRequest {
  string bike_id = 1;
}

message BikeResponse {
  Bike bike = 1;
}

message Bike {
  string id = 1;
  string model = 2;
  repeated Component components = 3;
}

message Component {
  string type = 1;
  string serial_number = 2;
  ComponentStatus status = 3;
  string last_maintenance = 4;
}

enum ComponentStatus {
  UNKNOWN = 0;
  GOOD = 1;
  NEEDS_MAINTENANCE = 2;
  DAMAGED = 3;
}

message ComponentStatusUpdate {
  string component_id = 1;
  ComponentStatus new_status = 2;
}

message UpdateResponse {
  bool success = 1;
  string message = 2;
}